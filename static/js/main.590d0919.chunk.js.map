{"version":3,"sources":["components/BasicStat.js","components/MultiplePercent.js","views/Dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["BasicStat","total","label","suffix","subtitle","Body","className","size","style","color","MultiplePercent","main","percents","date","map","p","Title","Color","Percent","undefined","Suffix","Date","toDateString","Dashboard","textAlign","paddingRight","fontSize","Entities","Content","title","Data","item","Type","Row","cards","Col","width","sm","lg","NetFlow","SubTitle","createFlowComponent","Main","Percents","createPercentMultipleComponent","mapElement","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.590d0919.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, Text, Header } from \"tabler-react\";\r\n\r\nexport default function BasicStat({total, label, suffix, subtitle}) {\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body className=\"p-3 text-center\">\r\n                <Header size={2} className={\"m-0 mb-1\"} >\r\n                    <span style={{\"color\" : total > 0 ? \"green\" : \"red\" }}>{total}{suffix && suffix}</span> \r\n                </Header>\r\n                <Text color=\"muted\" className=\" mb-2\">\r\n                    <span style={{\"fontWeight\" : 500}}>{label}</span>\r\n                </Text>\r\n                {subtitle &&\r\n                <Text color=\"muted\" className=\" mb-4\">\r\n                    <span style={{\"fontSize\" : \"0.8rem\"}}>{subtitle}</span>\r\n                </Text>\r\n                }\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n\r\n}","import React from 'react'\r\nimport { Card, Text, Header } from \"tabler-react\";\r\n\r\nexport default function MultiplePercent({main, label, percents, date}) {\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body className=\"p-3 text-center\">\r\n                <Header size={2} className={\"m-0 mb-1\"} >\r\n                    <span>{main}</span> \r\n                </Header>\r\n                <Text color=\"muted\" className=\" mb-2\">\r\n                    <span style={{\"fontWeight\" : 500}}>{label}</span>\r\n                </Text>\r\n                {percents &&\r\n                    percents.map(p => (\r\n                        <Text color=\"muted\" className=\" mb-1\">\r\n                            <b><span style={{\"fontSize\" : \"0.8rem\"}}>{p.Title}{\"\\t\"}</span></b>\r\n                            <span style={p.Color == null ? {\"fontSize\" : \"0.8rem\" } : {\"fontSize\" : \"0.8rem\", \"fontWeight\": 500, \"color\": p.Color }}>{p.Percent}{p.Suffix != undefined ? p.Suffix : \"%\"}</span>\r\n                        </Text>\r\n                    ))\r\n                }\r\n                {date &&\r\n                    <Text color=\"muted\" className=\" mb-1\">\r\n                        <span style={{\"fontSize\" : \"0.7rem\"}}>{new Date(date).toDateString()}</span>\r\n                    </Text>\r\n                }\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n\r\n}","import React, { Component, Fragment } from \"react\";\r\nimport \"tabler-react/dist/Tabler.css\";\r\nimport { StatsCard, Page, Grid, Card, Button } from \"tabler-react\";\r\nimport BasicStat from \"../../components/BasicStat\";\r\n\r\nimport Entities from '../../data/data.json';\r\nimport \"./Dashboard.css\";\r\nimport MultiplePercent from \"../../components/MultiplePercent\";\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <Fragment>\r\n            <div style={{textAlign: \"right\", paddingRight: \"1rem\"}}>\r\n                <span style={{fontSize: \"0.8rem\"}}>{(new Date(Entities.Date)).toDateString()}</span>\r\n            </div>\r\n\r\n            <Page.Content title=\"Dashboard\">\r\n                {Entities.Data.map(item => mapElement(item))}\r\n            </Page.Content>\r\n        </Fragment>\r\n    );\r\n\r\n    function mapElement(item) {\r\n        switch(item.Type) {\r\n            case \"Flow\":\r\n                return createFlowComponent(item);\r\n            case \"PercentMultiple\":\r\n                return createPercentMultipleComponent(item);\r\n        }\r\n    }\r\n\r\n    function createFlowComponent(item) {\r\n               return (<Grid.Row cards={true}>\r\n                    <Grid.Col width={12} \r\n                            sm={6} \r\n                            lg={4}>\r\n\r\n                        <BasicStat \r\n                            total={item.NetFlow} \r\n                            label={item.Title}\r\n                            suffix={item.Suffix}\r\n                            subtitle={item.SubTitle} />\r\n                    </Grid.Col>\r\n                </Grid.Row>);\r\n    }\r\n\r\n    function createPercentMultipleComponent(item) {\r\n        return (<Grid.Row cards={true}>\r\n            <Grid.Col width={12} \r\n                    sm={6} \r\n                    lg={4}>\r\n\r\n                <MultiplePercent \r\n                    main={item.Main} \r\n                    label={item.Title}\r\n                    percents={item.Percents}\r\n                    date = {item.Date} />\r\n            </Grid.Col>\r\n        </Grid.Row>);\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import './App.css';\nimport Dashboard from './views/Dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <div>\n      <Dashboard></Dashboard>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}